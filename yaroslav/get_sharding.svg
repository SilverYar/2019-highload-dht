<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="469"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="469"> </text>
<g id="frames">
<g>
<title>all (336 samples, 100.00%)</title><rect x="10.0" y="435.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="446.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=38659] (141 samples, 41.96%)</title><rect x="10.0" y="419.0" width="495.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="430.0">[NIO Acceptor 0.0.0.0:8080 tid=38659]</text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (141 samples, 41.96%)</title><rect x="10.0" y="403.0" width="495.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="414.0">one/nio/server/AcceptorThread.run</text>
</g>
<g>
<title>one/nio/net/Socket.acceptNonBlocking (124 samples, 36.90%)</title><rect x="13.5" y="387.0" width="435.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.5" y="398.0">one/nio/net/Socket.acceptNonBlocking</text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (120 samples, 35.71%)</title><rect x="13.5" y="371.0" width="421.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.5" y="382.0">one/nio/net/JavaServerSocket.accept</text>
</g>
<g>
<title>one/nio/net/JavaServerSocket.accept (120 samples, 35.71%)</title><rect x="13.5" y="355.0" width="421.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.5" y="366.0">one/nio/net/JavaServerSocket.accept</text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (120 samples, 35.71%)</title><rect x="13.5" y="339.0" width="421.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.5" y="350.0">sun/nio/ch/ServerSocketChannelImpl.accept</text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept (106 samples, 31.55%)</title><rect x="13.5" y="323.0" width="372.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.5" y="334.0">sun/nio/ch/ServerSocketChannelImpl.accept</text>
</g>
<g>
<title>sun/nio/ch/ServerSocketChannelImpl.accept0 (106 samples, 31.55%)</title><rect x="13.5" y="307.0" width="372.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.5" y="318.0">sun/nio/ch/ServerSocketChannelImpl.accept0</text>
</g>
<g>
<title>Java_sun_nio_ch_ServerSocketChannelImpl_accept0 (15 samples, 4.46%)</title><rect x="13.5" y="291.0" width="52.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="16.5" y="302.0">Java_..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ull&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.30%)</title><rect x="13.5" y="275.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.5" y="286.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (12 samples, 3.57%)</title><rect x="17.0" y="275.0" width="42.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="20.0" y="286.0">NET_..</text>
</g>
<g>
<title>jni_NewObject (6 samples, 1.79%)</title><rect x="20.5" y="259.0" width="21.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.5" y="270.0">j..</text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.30%)</title><rect x="27.6" y="243.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.6" y="254.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.30%)</title><rect x="31.1" y="243.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="34.1" y="254.0"></text>
</g>
<g>
<title>alloc_object(_jclass*, Thread*) (1 samples, 0.30%)</title><rect x="34.6" y="243.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="37.6" y="254.0"></text>
</g>
<g>
<title>oopDesc* G1BarrierSet::AccessBarrier&lt;1097844ull, G1BarrierSet&gt;::oop_load_not_in_heap&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.30%)</title><rect x="34.6" y="227.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="37.6" y="238.0"></text>
</g>
<g>
<title>oopDesc* RawAccessBarrier&lt;1097844ull&gt;::oop_load&lt;oopDesc*&gt;(void*) (1 samples, 0.30%)</title><rect x="34.6" y="211.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="37.6" y="222.0"></text>
</g>
<g>
<title>EnableIf&lt;HasDecorator&lt;1097844ull, MO_UNORDERED&gt;::value, oopDesc*&gt;::type RawAccessBarrier&lt;1097844ull&gt;::load_internal&lt;1097844ull, oopDesc*&gt;(void*) (1 samples, 0.30%)</title><rect x="34.6" y="195.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.6" y="206.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="38.1" y="243.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="41.1" y="254.0"></text>
</g>
<g>
<title>setInet6Address_ipaddress (2 samples, 0.60%)</title><rect x="41.6" y="259.0" width="7.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="44.6" y="270.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ull&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.30%)</title><rect x="41.6" y="243.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="44.6" y="254.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.30%)</title><rect x="45.1" y="243.0" width="3.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="48.1" y="254.0"></text>
</g>
<g>
<title>G1BarrierSet::AccessBarrier&lt;802934ull, G1BarrierSet&gt;::oop_load_in_heap_at(oopDesc*, long) (1 samples, 0.30%)</title><rect x="45.1" y="227.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="48.1" y="238.0"></text>
</g>
<g>
<title>unsigned int RawAccessBarrier&lt;802934ull&gt;::load&lt;unsigned int&gt;(void*) (1 samples, 0.30%)</title><rect x="45.1" y="211.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="48.1" y="222.0"></text>
</g>
<g>
<title>setInet6Address_scopeid (1 samples, 0.30%)</title><rect x="48.6" y="259.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="51.6" y="270.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ull&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.30%)</title><rect x="48.6" y="243.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="51.6" y="254.0"></text>
</g>
<g>
<title>setInetAddress_family (2 samples, 0.60%)</title><rect x="52.1" y="259.0" width="7.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="55.1" y="270.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.60%)</title><rect x="52.1" y="243.0" width="7.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="55.1" y="254.0"></text>
</g>
<g>
<title>G1BarrierSet::AccessBarrier&lt;802934ull, G1BarrierSet&gt;::oop_load_in_heap_at(oopDesc*, long) (1 samples, 0.30%)</title><rect x="52.1" y="227.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="55.1" y="238.0"></text>
</g>
<g>
<title>AccessBarrierSupport::resolve_unknown_oop_ref_strength(unsigned long long, oopDesc*, long) (1 samples, 0.30%)</title><rect x="52.1" y="211.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="55.1" y="222.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.30%)</title><rect x="55.7" y="227.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="58.7" y="238.0"></text>
</g>
<g>
<title>jni_NewObject (2 samples, 0.60%)</title><rect x="59.2" y="275.0" width="7.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="62.2" y="286.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.60%)</title><rect x="59.2" y="259.0" width="7.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.2" y="270.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.60%)</title><rect x="59.2" y="243.0" width="7.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="62.2" y="254.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="59.2" y="227.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="62.2" y="238.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.30%)</title><rect x="59.2" y="211.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="62.2" y="222.0"></text>
</g>
<g>
<title>_dispatch_queue_attrs (1 samples, 0.30%)</title><rect x="62.7" y="227.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="65.7" y="238.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (1 samples, 0.30%)</title><rect x="66.2" y="291.0" width="3.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="69.2" y="302.0"></text>
</g>
<g>
<title>__accept (90 samples, 26.79%)</title><rect x="69.7" y="291.0" width="316.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="72.7" y="302.0">__accept</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (14 samples, 4.17%)</title><rect x="385.8" y="323.0" width="49.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.8" y="334.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (14 samples, 4.17%)</title><rect x="385.8" y="307.0" width="49.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.8" y="318.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/Net.localInetAddress (10 samples, 2.98%)</title><rect x="385.8" y="291.0" width="35.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.8" y="302.0">sun..</text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localInetAddress (5 samples, 1.49%)</title><rect x="385.8" y="275.0" width="17.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="388.8" y="286.0"></text>
</g>
<g>
<title>NET_SockaddrToInetAddress (5 samples, 1.49%)</title><rect x="385.8" y="259.0" width="17.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="388.8" y="270.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="385.8" y="243.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="388.8" y="254.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.30%)</title><rect x="385.8" y="227.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="388.8" y="238.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.30%)</title><rect x="385.8" y="211.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="388.8" y="222.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.30%)</title><rect x="385.8" y="195.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="388.8" y="206.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.30%)</title><rect x="385.8" y="179.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="388.8" y="190.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.30%)</title><rect x="385.8" y="163.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="388.8" y="174.0"></text>
</g>
<g>
<title>OrderAccess::acquire() (1 samples, 0.30%)</title><rect x="385.8" y="147.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="388.8" y="158.0"></text>
</g>
<g>
<title>jni_NewObject (2 samples, 0.60%)</title><rect x="389.3" y="243.0" width="7.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="392.3" y="254.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.30%)</title><rect x="389.3" y="227.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="392.3" y="238.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.30%)</title><rect x="389.3" y="211.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="392.3" y="222.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="389.3" y="195.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="392.3" y="206.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.30%)</title><rect x="389.3" y="179.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="392.3" y="190.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.30%)</title><rect x="389.3" y="163.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="392.3" y="174.0"></text>
</g>
<g>
<title>alloc_object(_jclass*, Thread*) (1 samples, 0.30%)</title><rect x="392.8" y="227.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="395.8" y="238.0"></text>
</g>
<g>
<title>setInet6Address_ipaddress (2 samples, 0.60%)</title><rect x="396.3" y="243.0" width="7.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="399.3" y="254.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.60%)</title><rect x="396.3" y="227.0" width="7.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="399.3" y="238.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.30%)</title><rect x="399.8" y="211.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="402.8" y="222.0"></text>
</g>
<g>
<title>__getsockname (5 samples, 1.49%)</title><rect x="403.3" y="275.0" width="17.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="406.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localPort (4 samples, 1.19%)</title><rect x="420.9" y="291.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.9" y="302.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_localPort (1 samples, 0.30%)</title><rect x="420.9" y="275.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="423.9" y="286.0"></text>
</g>
<g>
<title>__getsockname (3 samples, 0.89%)</title><rect x="424.4" y="275.0" width="10.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="427.4" y="286.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.setBlocking (4 samples, 1.19%)</title><rect x="434.9" y="371.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.9" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.configureBlocking (4 samples, 1.19%)</title><rect x="434.9" y="355.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implConfigureBlocking (4 samples, 1.19%)</title><rect x="434.9" y="339.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.configureBlocking (4 samples, 1.19%)</title><rect x="434.9" y="323.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="437.9" y="334.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_configureBlocking (3 samples, 0.89%)</title><rect x="438.5" y="307.0" width="10.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="441.5" y="318.0"></text>
</g>
<g>
<title>__fcntl (1 samples, 0.30%)</title><rect x="442.0" y="291.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="445.0" y="302.0"></text>
</g>
<g>
<title>configureBlocking (1 samples, 0.30%)</title><rect x="445.5" y="291.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="448.5" y="302.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (16 samples, 4.76%)</title><rect x="449.0" y="387.0" width="56.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.0" y="398.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.register (16 samples, 4.76%)</title><rect x="449.0" y="371.0" width="56.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.0" y="382.0">one/ni..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 1.79%)</title><rect x="449.0" y="355.0" width="21.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="452.0" y="366.0">S..</text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (6 samples, 1.79%)</title><rect x="449.0" y="339.0" width="21.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="452.0" y="350.0">O..</text>
</g>
<g>
<title>__psynch_cvsignal (5 samples, 1.49%)</title><rect x="449.0" y="323.0" width="17.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="452.0" y="334.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.30%)</title><rect x="466.5" y="323.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="469.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.enable (10 samples, 2.98%)</title><rect x="470.1" y="355.0" width="35.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.1" y="366.0">one..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (10 samples, 2.98%)</title><rect x="470.1" y="339.0" width="35.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.1" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (10 samples, 2.98%)</title><rect x="470.1" y="323.0" width="35.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.1" y="334.0">sun..</text>
</g>
<g>
<title>write (9 samples, 2.68%)</title><rect x="473.6" y="307.0" width="31.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="476.6" y="318.0">wr..</text>
</g>
<g>
<title>[NIO Selector #0 tid=24323] (31 samples, 9.23%)</title><rect x="505.2" y="419.0" width="108.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="508.2" y="430.0">[NIO Selector..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="505.2" y="403.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="508.2" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="505.2" y="387.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="508.2" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="505.2" y="371.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="508.2" y="382.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.30%)</title><rect x="505.2" y="355.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="508.2" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="505.2" y="339.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="508.2" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (30 samples, 8.93%)</title><rect x="508.7" y="403.0" width="105.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.7" y="414.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (19 samples, 5.65%)</title><rect x="508.7" y="387.0" width="66.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.7" y="398.0">one/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (19 samples, 5.65%)</title><rect x="508.7" y="371.0" width="66.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.7" y="382.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (19 samples, 5.65%)</title><rect x="508.7" y="355.0" width="66.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.7" y="366.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (19 samples, 5.65%)</title><rect x="508.7" y="339.0" width="66.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.7" y="350.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (12 samples, 3.57%)</title><rect x="508.7" y="323.0" width="42.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.7" y="334.0">sun/..</text>
</g>
<g>
<title>kevent (12 samples, 3.57%)</title><rect x="508.7" y="307.0" width="42.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="511.7" y="318.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.30%)</title><rect x="550.8" y="323.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.register (1 samples, 0.30%)</title><rect x="550.8" y="307.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.8" y="318.0"></text>
</g>
<g>
<title>kevent (1 samples, 0.30%)</title><rect x="550.8" y="291.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="553.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (6 samples, 1.79%)</title><rect x="554.3" y="323.0" width="21.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.3" y="334.0">s..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.deregister (1 samples, 0.30%)</title><rect x="554.3" y="307.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.3" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.remove (2 samples, 0.60%)</title><rect x="557.9" y="307.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.9" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (2 samples, 0.60%)</title><rect x="557.9" y="291.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.implDereg (1 samples, 0.30%)</title><rect x="564.9" y="307.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.register (1 samples, 0.30%)</title><rect x="564.9" y="291.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.9" y="302.0"></text>
</g>
<g>
<title>kevent (1 samples, 0.30%)</title><rect x="564.9" y="275.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="567.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (2 samples, 0.60%)</title><rect x="568.4" y="307.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (2 samples, 0.60%)</title><rect x="568.4" y="291.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (2 samples, 0.60%)</title><rect x="568.4" y="275.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.4" y="286.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 0.60%)</title><rect x="568.4" y="259.0" width="7.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="571.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (11 samples, 3.27%)</title><rect x="575.4" y="387.0" width="38.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.4" y="398.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (11 samples, 3.27%)</title><rect x="575.4" y="371.0" width="38.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.4" y="382.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9 samples, 2.68%)</title><rect x="575.4" y="355.0" width="31.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.4" y="366.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 2.68%)</title><rect x="575.4" y="339.0" width="31.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.4" y="350.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 2.68%)</title><rect x="575.4" y="323.0" width="31.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.4" y="334.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.handleDefault (9 samples, 2.68%)</title><rect x="575.4" y="307.0" width="31.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.4" y="318.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (7 samples, 2.08%)</title><rect x="575.4" y="291.0" width="24.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.4" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.89%)</title><rect x="575.4" y="275.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.4" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.89%)</title><rect x="575.4" y="259.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.89%)</title><rect x="575.4" y="243.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.89%)</title><rect x="575.4" y="227.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.4" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (3 samples, 0.89%)</title><rect x="575.4" y="211.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.89%)</title><rect x="575.4" y="195.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.4" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.89%)</title><rect x="575.4" y="179.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.4" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.89%)</title><rect x="575.4" y="163.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (3 samples, 0.89%)</title><rect x="575.4" y="147.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (3 samples, 0.89%)</title><rect x="575.4" y="131.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.4" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 0.89%)</title><rect x="575.4" y="115.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.4" y="126.0"></text>
</g>
<g>
<title>write (2 samples, 0.60%)</title><rect x="578.9" y="99.0" width="7.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="581.9" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (4 samples, 1.19%)</title><rect x="586.0" y="275.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (4 samples, 1.19%)</title><rect x="586.0" y="259.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (4 samples, 1.19%)</title><rect x="586.0" y="243.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.0" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (4 samples, 1.19%)</title><rect x="586.0" y="227.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.0" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (4 samples, 1.19%)</title><rect x="586.0" y="211.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (4 samples, 1.19%)</title><rect x="586.0" y="195.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (4 samples, 1.19%)</title><rect x="586.0" y="179.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.0" y="190.0"></text>
</g>
<g>
<title>shutdown (4 samples, 1.19%)</title><rect x="586.0" y="163.0" width="14.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="589.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.30%)</title><rect x="600.0" y="291.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.30%)</title><rect x="600.0" y="275.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.30%)</title><rect x="600.0" y="259.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.30%)</title><rect x="600.0" y="243.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.entity (1 samples, 0.30%)</title><rect x="603.5" y="291.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.60%)</title><rect x="607.0" y="355.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (2 samples, 0.60%)</title><rect x="607.0" y="339.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (2 samples, 0.60%)</title><rect x="607.0" y="323.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.60%)</title><rect x="607.0" y="307.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.60%)</title><rect x="607.0" y="291.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.60%)</title><rect x="607.0" y="275.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (2 samples, 0.60%)</title><rect x="607.0" y="259.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (2 samples, 0.60%)</title><rect x="607.0" y="243.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.0" y="254.0"></text>
</g>
<g>
<title>read (2 samples, 0.60%)</title><rect x="607.0" y="227.0" width="7.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="610.0" y="238.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=39683] (41 samples, 12.20%)</title><rect x="614.0" y="419.0" width="144.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="617.0" y="430.0">[NIO Selector #1 t..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="614.0" y="403.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="617.0" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="614.0" y="387.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="617.0" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="614.0" y="371.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="617.0" y="382.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.30%)</title><rect x="614.0" y="355.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="617.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="614.0" y="339.0" width="3.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="617.0" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (40 samples, 11.90%)</title><rect x="617.6" y="403.0" width="140.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.6" y="414.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (28 samples, 8.33%)</title><rect x="617.6" y="387.0" width="98.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.6" y="398.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.30%)</title><rect x="617.6" y="371.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.6" y="382.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.30%)</title><rect x="621.1" y="371.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.30%)</title><rect x="621.1" y="355.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.30%)</title><rect x="621.1" y="339.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="624.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.30%)</title><rect x="621.1" y="323.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.setEventOps (1 samples, 0.30%)</title><rect x="621.1" y="307.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.ensureOpen (1 samples, 0.30%)</title><rect x="621.1" y="291.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.1" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (1 samples, 0.30%)</title><rect x="621.1" y="275.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (26 samples, 7.74%)</title><rect x="624.6" y="371.0" width="91.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.6" y="382.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (26 samples, 7.74%)</title><rect x="624.6" y="355.0" width="91.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.6" y="366.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (26 samples, 7.74%)</title><rect x="624.6" y="339.0" width="91.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.6" y="350.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (18 samples, 5.36%)</title><rect x="628.1" y="323.0" width="63.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.1" y="334.0">sun/nio..</text>
</g>
<g>
<title>kevent (18 samples, 5.36%)</title><rect x="628.1" y="307.0" width="63.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="631.1" y="318.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (3 samples, 0.89%)</title><rect x="691.3" y="323.0" width="10.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.register (3 samples, 0.89%)</title><rect x="691.3" y="307.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.3" y="318.0"></text>
</g>
<g>
<title>kevent (3 samples, 0.89%)</title><rect x="691.3" y="291.0" width="10.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="694.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 1.19%)</title><rect x="701.8" y="323.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.implDereg (2 samples, 0.60%)</title><rect x="701.8" y="307.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.register (2 samples, 0.60%)</title><rect x="701.8" y="291.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.8" y="302.0"></text>
</g>
<g>
<title>kevent (2 samples, 0.60%)</title><rect x="701.8" y="275.0" width="7.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="704.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (2 samples, 0.60%)</title><rect x="708.9" y="307.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (2 samples, 0.60%)</title><rect x="708.9" y="291.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (2 samples, 0.60%)</title><rect x="708.9" y="275.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.9" y="286.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.30%)</title><rect x="712.4" y="259.0" width="3.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="715.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 3.57%)</title><rect x="715.9" y="387.0" width="42.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.9" y="398.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 3.57%)</title><rect x="715.9" y="371.0" width="42.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.9" y="382.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (12 samples, 3.57%)</title><rect x="715.9" y="355.0" width="42.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.9" y="366.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 3.27%)</title><rect x="715.9" y="339.0" width="38.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.9" y="350.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 3.27%)</title><rect x="715.9" y="323.0" width="38.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.9" y="334.0">one..</text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.handleDefault (11 samples, 3.27%)</title><rect x="715.9" y="307.0" width="38.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.9" y="318.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (10 samples, 2.98%)</title><rect x="715.9" y="291.0" width="35.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.9" y="302.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.49%)</title><rect x="715.9" y="275.0" width="17.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.9" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.49%)</title><rect x="715.9" y="259.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.9" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.49%)</title><rect x="715.9" y="243.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.9" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.49%)</title><rect x="715.9" y="227.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (5 samples, 1.49%)</title><rect x="715.9" y="211.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (5 samples, 1.49%)</title><rect x="715.9" y="195.0" width="17.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.9" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 1.49%)</title><rect x="715.9" y="179.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.9" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 1.49%)</title><rect x="715.9" y="163.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (5 samples, 1.49%)</title><rect x="715.9" y="147.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.9" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (5 samples, 1.49%)</title><rect x="715.9" y="131.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (5 samples, 1.49%)</title><rect x="715.9" y="115.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.9" y="126.0"></text>
</g>
<g>
<title>write (5 samples, 1.49%)</title><rect x="715.9" y="99.0" width="17.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="718.9" y="110.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (5 samples, 1.49%)</title><rect x="733.5" y="275.0" width="17.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.5" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (5 samples, 1.49%)</title><rect x="733.5" y="259.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.5" y="270.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (5 samples, 1.49%)</title><rect x="733.5" y="243.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.5" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (5 samples, 1.49%)</title><rect x="733.5" y="227.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.5" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (5 samples, 1.49%)</title><rect x="733.5" y="211.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (5 samples, 1.49%)</title><rect x="733.5" y="195.0" width="17.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.5" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (1 samples, 0.30%)</title><rect x="733.5" y="179.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (1 samples, 0.30%)</title><rect x="733.5" y="163.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.5" y="174.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_getIntOption0 (1 samples, 0.30%)</title><rect x="733.5" y="147.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="736.5" y="158.0"></text>
</g>
<g>
<title>getsockopt (1 samples, 0.30%)</title><rect x="733.5" y="131.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="736.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (4 samples, 1.19%)</title><rect x="737.0" y="179.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.0" y="190.0"></text>
</g>
<g>
<title>shutdown (4 samples, 1.19%)</title><rect x="737.0" y="163.0" width="14.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="740.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.entity (1 samples, 0.30%)</title><rect x="751.0" y="291.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/Node.primaryFor (1 samples, 0.30%)</title><rect x="751.0" y="275.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.30%)</title><rect x="751.0" y="259.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.30%)</title><rect x="754.5" y="339.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.30%)</title><rect x="754.5" y="323.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.30%)</title><rect x="754.5" y="307.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.30%)</title><rect x="754.5" y="291.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.5" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25091] (48 samples, 14.29%)</title><rect x="758.0" y="419.0" width="168.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="761.0" y="430.0">[NIO Selector #2 tid=2..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.60%)</title><rect x="758.0" y="403.0" width="7.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="761.0" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.60%)</title><rect x="758.0" y="387.0" width="7.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="761.0" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.60%)</title><rect x="758.0" y="371.0" width="7.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="761.0" y="382.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.60%)</title><rect x="758.0" y="355.0" width="7.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="761.0" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.60%)</title><rect x="758.0" y="339.0" width="7.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="761.0" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (46 samples, 13.69%)</title><rect x="765.1" y="403.0" width="161.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.1" y="414.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (31 samples, 9.23%)</title><rect x="765.1" y="387.0" width="108.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.1" y="398.0">one/nio/net/J..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.30%)</title><rect x="765.1" y="371.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.30%)</title><rect x="765.1" y="355.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.30%)</title><rect x="765.1" y="339.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.30%)</title><rect x="765.1" y="323.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.channel (1 samples, 0.30%)</title><rect x="765.1" y="307.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (30 samples, 8.93%)</title><rect x="768.6" y="371.0" width="105.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.6" y="382.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (30 samples, 8.93%)</title><rect x="768.6" y="355.0" width="105.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.6" y="366.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (30 samples, 8.93%)</title><rect x="768.6" y="339.0" width="105.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.6" y="350.0">sun/nio/ch/KQ..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (23 samples, 6.85%)</title><rect x="768.6" y="323.0" width="80.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.6" y="334.0">sun/nio/c..</text>
</g>
<g>
<title>kevent (22 samples, 6.55%)</title><rect x="772.1" y="307.0" width="77.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="775.1" y="318.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.60%)</title><rect x="849.3" y="323.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.clearInterrupt (2 samples, 0.60%)</title><rect x="849.3" y="307.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (2 samples, 0.60%)</title><rect x="849.3" y="291.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.3" y="302.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.30%)</title><rect x="849.3" y="275.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="852.3" y="286.0"></text>
</g>
<g>
<title>read (1 samples, 0.30%)</title><rect x="852.9" y="275.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="855.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.30%)</title><rect x="856.4" y="323.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.register (1 samples, 0.30%)</title><rect x="856.4" y="307.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.4" y="318.0"></text>
</g>
<g>
<title>kevent (1 samples, 0.30%)</title><rect x="856.4" y="291.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="859.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 1.19%)</title><rect x="859.9" y="323.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.implDereg (3 samples, 0.89%)</title><rect x="859.9" y="307.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.register (3 samples, 0.89%)</title><rect x="859.9" y="291.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.9" y="302.0"></text>
</g>
<g>
<title>kevent (2 samples, 0.60%)</title><rect x="863.4" y="275.0" width="7.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="866.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.kill (1 samples, 0.30%)</title><rect x="870.4" y="307.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.close (1 samples, 0.30%)</title><rect x="870.4" y="291.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.close0 (1 samples, 0.30%)</title><rect x="870.4" y="275.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.4" y="286.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.30%)</title><rect x="870.4" y="259.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="873.4" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (15 samples, 4.46%)</title><rect x="873.9" y="387.0" width="52.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.9" y="398.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (15 samples, 4.46%)</title><rect x="873.9" y="371.0" width="52.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.9" y="382.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 4.17%)</title><rect x="873.9" y="355.0" width="49.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.9" y="366.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (14 samples, 4.17%)</title><rect x="873.9" y="339.0" width="49.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.9" y="350.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (14 samples, 4.17%)</title><rect x="873.9" y="323.0" width="49.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.9" y="334.0">one/n..</text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.handleDefault (14 samples, 4.17%)</title><rect x="873.9" y="307.0" width="49.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.9" y="318.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (14 samples, 4.17%)</title><rect x="873.9" y="291.0" width="49.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="876.9" y="302.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 2.98%)</title><rect x="873.9" y="275.0" width="35.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.9" y="286.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.98%)</title><rect x="873.9" y="259.0" width="35.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.9" y="270.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.98%)</title><rect x="873.9" y="243.0" width="35.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.9" y="254.0">one..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.30%)</title><rect x="873.9" y="227.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="876.9" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 2.68%)</title><rect x="877.4" y="227.0" width="31.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.4" y="238.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (9 samples, 2.68%)</title><rect x="877.4" y="211.0" width="31.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.4" y="222.0">on..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (9 samples, 2.68%)</title><rect x="877.4" y="195.0" width="31.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="880.4" y="206.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (9 samples, 2.68%)</title><rect x="877.4" y="179.0" width="31.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.4" y="190.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (9 samples, 2.68%)</title><rect x="877.4" y="163.0" width="31.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="880.4" y="174.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (9 samples, 2.68%)</title><rect x="877.4" y="147.0" width="31.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.4" y="158.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (9 samples, 2.68%)</title><rect x="877.4" y="131.0" width="31.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.4" y="142.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (9 samples, 2.68%)</title><rect x="877.4" y="115.0" width="31.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.4" y="126.0">su..</text>
</g>
<g>
<title>write (8 samples, 2.38%)</title><rect x="881.0" y="99.0" width="28.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="884.0" y="110.0">wr..</text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (4 samples, 1.19%)</title><rect x="909.0" y="275.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (4 samples, 1.19%)</title><rect x="909.0" y="259.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (4 samples, 1.19%)</title><rect x="909.0" y="243.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.0" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (4 samples, 1.19%)</title><rect x="909.0" y="227.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="912.0" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (4 samples, 1.19%)</title><rect x="909.0" y="211.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (4 samples, 1.19%)</title><rect x="909.0" y="195.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (4 samples, 1.19%)</title><rect x="909.0" y="179.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.0" y="190.0"></text>
</g>
<g>
<title>shutdown (4 samples, 1.19%)</title><rect x="909.0" y="163.0" width="14.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="912.0" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.30%)</title><rect x="923.1" y="355.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="926.1" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.30%)</title><rect x="923.1" y="339.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.30%)</title><rect x="923.1" y="323.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="926.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.30%)</title><rect x="923.1" y="307.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.30%)</title><rect x="923.1" y="291.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="926.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.30%)</title><rect x="923.1" y="275.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.30%)</title><rect x="923.1" y="259.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="926.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.30%)</title><rect x="923.1" y="243.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="926.1" y="254.0"></text>
</g>
<g>
<title>read (1 samples, 0.30%)</title><rect x="923.1" y="227.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="926.1" y="238.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25603] (36 samples, 10.71%)</title><rect x="926.6" y="419.0" width="126.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="929.6" y="430.0">[NIO Selector #3..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="926.6" y="403.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="929.6" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="926.6" y="387.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="929.6" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="926.6" y="371.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="929.6" y="382.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.30%)</title><rect x="926.6" y="355.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="929.6" y="366.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="926.6" y="339.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="929.6" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (35 samples, 10.42%)</title><rect x="930.1" y="403.0" width="122.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="933.1" y="414.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (21 samples, 6.25%)</title><rect x="930.1" y="387.0" width="73.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.1" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.30%)</title><rect x="933.6" y="371.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.poll (1 samples, 0.30%)</title><rect x="933.6" y="355.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue$Node.casItem (1 samples, 0.30%)</title><rect x="933.6" y="339.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.30%)</title><rect x="933.6" y="323.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleReferences$FieldInstanceReadWrite.compareAndSet (1 samples, 0.30%)</title><rect x="933.6" y="307.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (19 samples, 5.65%)</title><rect x="937.1" y="371.0" width="66.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.1" y="382.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (19 samples, 5.65%)</title><rect x="937.1" y="355.0" width="66.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="940.1" y="366.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (19 samples, 5.65%)</title><rect x="937.1" y="339.0" width="66.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.1" y="350.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (15 samples, 4.46%)</title><rect x="937.1" y="323.0" width="52.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="940.1" y="334.0">sun/n..</text>
</g>
<g>
<title>kevent (15 samples, 4.46%)</title><rect x="937.1" y="307.0" width="52.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="940.1" y="318.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (2 samples, 0.60%)</title><rect x="989.8" y="323.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.30%)</title><rect x="993.3" y="307.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.30%)</title><rect x="996.8" y="323.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.8" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.30%)</title><rect x="996.8" y="307.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.8" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.30%)</title><rect x="996.8" y="291.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.8" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.30%)</title><rect x="996.8" y="275.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.8" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.30%)</title><rect x="996.8" y="259.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.30%)</title><rect x="1000.4" y="323.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$KeySetView.remove (1 samples, 0.30%)</title><rect x="1000.4" y="307.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.remove (1 samples, 0.30%)</title><rect x="1000.4" y="291.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.replaceNode (1 samples, 0.30%)</title><rect x="1000.4" y="275.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1003.4" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (14 samples, 4.17%)</title><rect x="1003.9" y="387.0" width="49.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.9" y="398.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13 samples, 3.87%)</title><rect x="1003.9" y="371.0" width="45.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.9" y="382.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (11 samples, 3.27%)</title><rect x="1007.4" y="355.0" width="38.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.4" y="366.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 3.27%)</title><rect x="1007.4" y="339.0" width="38.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.4" y="350.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 3.27%)</title><rect x="1007.4" y="323.0" width="38.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.4" y="334.0">one..</text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.handleDefault (11 samples, 3.27%)</title><rect x="1007.4" y="307.0" width="38.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.4" y="318.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (11 samples, 3.27%)</title><rect x="1007.4" y="291.0" width="38.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.4" y="302.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 2.08%)</title><rect x="1007.4" y="275.0" width="24.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.4" y="286.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.30%)</title><rect x="1007.4" y="259.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.4" y="270.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.30%)</title><rect x="1007.4" y="243.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.30%)</title><rect x="1007.4" y="227.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.4" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.79%)</title><rect x="1010.9" y="259.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.9" y="270.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.79%)</title><rect x="1010.9" y="243.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1013.9" y="254.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 1.79%)</title><rect x="1010.9" y="227.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.9" y="238.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (6 samples, 1.79%)</title><rect x="1010.9" y="211.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.9" y="222.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (6 samples, 1.79%)</title><rect x="1010.9" y="195.0" width="21.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1013.9" y="206.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (6 samples, 1.79%)</title><rect x="1010.9" y="179.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.9" y="190.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (6 samples, 1.79%)</title><rect x="1010.9" y="163.0" width="21.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.9" y="174.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (6 samples, 1.79%)</title><rect x="1010.9" y="147.0" width="21.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1013.9" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (6 samples, 1.79%)</title><rect x="1010.9" y="131.0" width="21.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1013.9" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (6 samples, 1.79%)</title><rect x="1010.9" y="115.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.9" y="126.0">s..</text>
</g>
<g>
<title>write (6 samples, 1.79%)</title><rect x="1010.9" y="99.0" width="21.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1013.9" y="110.0">w..</text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (4 samples, 1.19%)</title><rect x="1032.0" y="275.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1035.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (4 samples, 1.19%)</title><rect x="1032.0" y="259.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (4 samples, 1.19%)</title><rect x="1032.0" y="243.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.0" y="254.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (4 samples, 1.19%)</title><rect x="1032.0" y="227.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.0" y="238.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.implCloseChannel (4 samples, 1.19%)</title><rect x="1032.0" y="211.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.0" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.implCloseSelectableChannel (4 samples, 1.19%)</title><rect x="1032.0" y="195.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.0" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getSocketOption (2 samples, 0.60%)</title><rect x="1032.0" y="179.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getIntOption0 (2 samples, 0.60%)</title><rect x="1032.0" y="163.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.0" y="174.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_Net_getIntOption0 (2 samples, 0.60%)</title><rect x="1032.0" y="147.0" width="7.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1035.0" y="158.0"></text>
</g>
<g>
<title>getsockopt (2 samples, 0.60%)</title><rect x="1032.0" y="131.0" width="7.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1035.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.shutdown (2 samples, 0.60%)</title><rect x="1039.0" y="179.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.0" y="190.0"></text>
</g>
<g>
<title>shutdown (2 samples, 0.60%)</title><rect x="1039.0" y="163.0" width="7.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1042.0" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.30%)</title><rect x="1046.0" y="355.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.0" y="366.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (1 samples, 0.30%)</title><rect x="1046.0" y="339.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.30%)</title><rect x="1046.0" y="323.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.30%)</title><rect x="1046.0" y="307.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.30%)</title><rect x="1046.0" y="291.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1049.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.30%)</title><rect x="1046.0" y="275.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.30%)</title><rect x="1046.0" y="259.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.0" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.30%)</title><rect x="1046.0" y="243.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1049.0" y="254.0"></text>
</g>
<g>
<title>read (1 samples, 0.30%)</title><rect x="1046.0" y="227.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1049.0" y="238.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.30%)</title><rect x="1049.5" y="371.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1052.5" y="382.0"></text>
</g>
<g>
<title>__vsnprintf_chk (1 samples, 0.30%)</title><rect x="1049.5" y="355.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1052.5" y="366.0"></text>
</g>
<g>
<title>[tid=13059] (3 samples, 0.89%)</title><rect x="1053.0" y="419.0" width="10.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1056.0" y="430.0"></text>
</g>
<g>
<title>thread_start (3 samples, 0.89%)</title><rect x="1053.0" y="403.0" width="10.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1056.0" y="414.0"></text>
</g>
<g>
<title>_pthread_start (3 samples, 0.89%)</title><rect x="1053.0" y="387.0" width="10.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1056.0" y="398.0"></text>
</g>
<g>
<title>_pthread_body (3 samples, 0.89%)</title><rect x="1053.0" y="371.0" width="10.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1056.0" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.89%)</title><rect x="1053.0" y="355.0" width="10.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1056.0" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.89%)</title><rect x="1053.0" y="339.0" width="10.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.0" y="350.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (3 samples, 0.89%)</title><rect x="1053.0" y="323.0" width="10.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1056.0" y="334.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (3 samples, 0.89%)</title><rect x="1053.0" y="307.0" width="10.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1056.0" y="318.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (3 samples, 0.89%)</title><rect x="1053.0" y="291.0" width="10.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1056.0" y="302.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.89%)</title><rect x="1053.0" y="275.0" width="10.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1056.0" y="286.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.89%)</title><rect x="1053.0" y="259.0" width="10.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.0" y="270.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.89%)</title><rect x="1053.0" y="243.0" width="10.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1056.0" y="254.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.89%)</title><rect x="1053.0" y="227.0" width="10.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1056.0" y="238.0"></text>
</g>
<g>
<title>[tid=18435] (3 samples, 0.89%)</title><rect x="1063.6" y="419.0" width="10.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1066.6" y="430.0"></text>
</g>
<g>
<title>thread_start (3 samples, 0.89%)</title><rect x="1063.6" y="403.0" width="10.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1066.6" y="414.0"></text>
</g>
<g>
<title>_pthread_start (3 samples, 0.89%)</title><rect x="1063.6" y="387.0" width="10.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1066.6" y="398.0"></text>
</g>
<g>
<title>_pthread_body (3 samples, 0.89%)</title><rect x="1063.6" y="371.0" width="10.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1066.6" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.89%)</title><rect x="1063.6" y="355.0" width="10.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1066.6" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.89%)</title><rect x="1063.6" y="339.0" width="10.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1066.6" y="350.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.89%)</title><rect x="1063.6" y="323.0" width="10.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1066.6" y="334.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.89%)</title><rect x="1063.6" y="307.0" width="10.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1066.6" y="318.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.60%)</title><rect x="1063.6" y="291.0" width="7.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1066.6" y="302.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.60%)</title><rect x="1063.6" y="275.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1066.6" y="286.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.60%)</title><rect x="1063.6" y="259.0" width="7.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1066.6" y="270.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.60%)</title><rect x="1063.6" y="243.0" width="7.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1066.6" y="254.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 0.30%)</title><rect x="1070.6" y="291.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.6" y="302.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.30%)</title><rect x="1070.6" y="275.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.6" y="286.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.30%)</title><rect x="1070.6" y="259.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.6" y="270.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.30%)</title><rect x="1070.6" y="243.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1073.6" y="254.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*) (1 samples, 0.30%)</title><rect x="1070.6" y="227.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.6" y="238.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.30%)</title><rect x="1070.6" y="211.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1073.6" y="222.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.30%)</title><rect x="1070.6" y="195.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1073.6" y="206.0"></text>
</g>
<g>
<title>__block_descriptor_tmp (1 samples, 0.30%)</title><rect x="1070.6" y="179.0" width="3.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1073.6" y="190.0"></text>
</g>
<g>
<title>[tid=22019] (1 samples, 0.30%)</title><rect x="1074.1" y="419.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1077.1" y="430.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.30%)</title><rect x="1074.1" y="403.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1077.1" y="414.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.30%)</title><rect x="1074.1" y="387.0" width="3.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1077.1" y="398.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.30%)</title><rect x="1074.1" y="371.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1077.1" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.30%)</title><rect x="1074.1" y="355.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1077.1" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.30%)</title><rect x="1074.1" y="339.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1077.1" y="350.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.30%)</title><rect x="1074.1" y="323.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1077.1" y="334.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.30%)</title><rect x="1074.1" y="307.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1077.1" y="318.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.30%)</title><rect x="1074.1" y="291.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1077.1" y="302.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.30%)</title><rect x="1074.1" y="275.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1077.1" y="286.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.30%)</title><rect x="1074.1" y="259.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1077.1" y="270.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.30%)</title><rect x="1074.1" y="243.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1077.1" y="254.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.30%)</title><rect x="1074.1" y="227.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1077.1" y="238.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.30%)</title><rect x="1074.1" y="211.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1077.1" y="222.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.30%)</title><rect x="1074.1" y="195.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1077.1" y="206.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.30%)</title><rect x="1074.1" y="179.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1077.1" y="190.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.30%)</title><rect x="1074.1" y="163.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1077.1" y="174.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.30%)</title><rect x="1074.1" y="147.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1077.1" y="158.0"></text>
</g>
<g>
<title>[tid=26883] (1 samples, 0.30%)</title><rect x="1077.6" y="419.0" width="3.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1080.6" y="430.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.30%)</title><rect x="1077.6" y="403.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1080.6" y="414.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.30%)</title><rect x="1077.6" y="387.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1080.6" y="398.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.30%)</title><rect x="1077.6" y="371.0" width="3.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1080.6" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.30%)</title><rect x="1077.6" y="355.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1080.6" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.30%)</title><rect x="1077.6" y="339.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1080.6" y="350.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.30%)</title><rect x="1077.6" y="323.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1080.6" y="334.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.30%)</title><rect x="1077.6" y="307.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.6" y="318.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.30%)</title><rect x="1077.6" y="291.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1080.6" y="302.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.30%)</title><rect x="1077.6" y="275.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1080.6" y="286.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.30%)</title><rect x="1077.6" y="259.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1080.6" y="270.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.30%)</title><rect x="1077.6" y="243.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.6" y="254.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.30%)</title><rect x="1077.6" y="227.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1080.6" y="238.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (1 samples, 0.30%)</title><rect x="1077.6" y="211.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1080.6" y="222.0"></text>
</g>
<g>
<title>[tid=27395] (1 samples, 0.30%)</title><rect x="1081.1" y="419.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1084.1" y="430.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.30%)</title><rect x="1081.1" y="403.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1084.1" y="414.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.30%)</title><rect x="1081.1" y="387.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1084.1" y="398.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.30%)</title><rect x="1081.1" y="371.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1084.1" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.30%)</title><rect x="1081.1" y="355.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1084.1" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.30%)</title><rect x="1081.1" y="339.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1084.1" y="350.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.30%)</title><rect x="1081.1" y="323.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1084.1" y="334.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.30%)</title><rect x="1081.1" y="307.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1084.1" y="318.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.30%)</title><rect x="1081.1" y="291.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1084.1" y="302.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.30%)</title><rect x="1081.1" y="275.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1084.1" y="286.0"></text>
</g>
<g>
<title>G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker(G1GCPhaseTimes*, G1GCPhaseTimes::GCParPhases, unsigned int) (1 samples, 0.30%)</title><rect x="1081.1" y="259.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1084.1" y="270.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (1 samples, 0.30%)</title><rect x="1081.1" y="243.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1084.1" y="254.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.30%)</title><rect x="1081.1" y="227.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1084.1" y="238.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.30%)</title><rect x="1081.1" y="211.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1084.1" y="222.0"></text>
</g>
<g>
<title>_res (1 samples, 0.30%)</title><rect x="1081.1" y="195.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1084.1" y="206.0"></text>
</g>
<g>
<title>[tid=36867] (1 samples, 0.30%)</title><rect x="1084.6" y="419.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1087.6" y="430.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.30%)</title><rect x="1084.6" y="403.0" width="3.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1087.6" y="414.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.30%)</title><rect x="1084.6" y="387.0" width="3.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1087.6" y="398.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.30%)</title><rect x="1084.6" y="371.0" width="3.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1087.6" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.30%)</title><rect x="1084.6" y="355.0" width="3.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1087.6" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.30%)</title><rect x="1084.6" y="339.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1087.6" y="350.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.30%)</title><rect x="1084.6" y="323.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1087.6" y="334.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.30%)</title><rect x="1084.6" y="307.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1087.6" y="318.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.30%)</title><rect x="1084.6" y="291.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1087.6" y="302.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.30%)</title><rect x="1084.6" y="275.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1087.6" y="286.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.30%)</title><rect x="1084.6" y="259.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1087.6" y="270.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.30%)</title><rect x="1084.6" y="243.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1087.6" y="254.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.30%)</title><rect x="1084.6" y="227.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1087.6" y="238.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.30%)</title><rect x="1084.6" y="211.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1087.6" y="222.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.30%)</title><rect x="1084.6" y="195.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.6" y="206.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="1084.6" y="179.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1087.6" y="190.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.30%)</title><rect x="1084.6" y="163.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1087.6" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.30%)</title><rect x="1084.6" y="147.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1087.6" y="158.0"></text>
</g>
<g>
<title>[tid=41475] (17 samples, 5.06%)</title><rect x="1088.2" y="419.0" width="59.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1091.2" y="430.0">[tid=4..</text>
</g>
<g>
<title>thread_start (17 samples, 5.06%)</title><rect x="1088.2" y="403.0" width="59.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1091.2" y="414.0">thread..</text>
</g>
<g>
<title>_pthread_start (17 samples, 5.06%)</title><rect x="1088.2" y="387.0" width="59.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1091.2" y="398.0">_pthre..</text>
</g>
<g>
<title>_pthread_body (17 samples, 5.06%)</title><rect x="1088.2" y="371.0" width="59.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1091.2" y="382.0">_pthre..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (17 samples, 5.06%)</title><rect x="1088.2" y="355.0" width="59.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1091.2" y="366.0">thread..</text>
</g>
<g>
<title>Thread::call_run() (17 samples, 5.06%)</title><rect x="1088.2" y="339.0" width="59.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1091.2" y="350.0">Thread..</text>
</g>
<g>
<title>WatcherThread::run() (17 samples, 5.06%)</title><rect x="1088.2" y="323.0" width="59.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1091.2" y="334.0">Watche..</text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.30%)</title><rect x="1088.2" y="307.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1091.2" y="318.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (16 samples, 4.76%)</title><rect x="1091.7" y="307.0" width="56.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1094.7" y="318.0">Watche..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (16 samples, 4.76%)</title><rect x="1091.7" y="291.0" width="56.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1094.7" y="302.0">Monito..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (16 samples, 4.76%)</title><rect x="1091.7" y="275.0" width="56.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1094.7" y="286.0">Monito..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (16 samples, 4.76%)</title><rect x="1091.7" y="259.0" width="56.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1094.7" y="270.0">os::Pl..</text>
</g>
<g>
<title>__psynch_cvwait (16 samples, 4.76%)</title><rect x="1091.7" y="243.0" width="56.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1094.7" y="254.0">__psyn..</text>
</g>
<g>
<title>[tid=42499] (1 samples, 0.30%)</title><rect x="1147.9" y="419.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1150.9" y="430.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.30%)</title><rect x="1147.9" y="403.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1150.9" y="414.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.30%)</title><rect x="1147.9" y="387.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1150.9" y="398.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.30%)</title><rect x="1147.9" y="371.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1150.9" y="382.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.30%)</title><rect x="1147.9" y="355.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1150.9" y="366.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.30%)</title><rect x="1147.9" y="339.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.9" y="350.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.30%)</title><rect x="1147.9" y="323.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1150.9" y="334.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.30%)</title><rect x="1147.9" y="307.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.9" y="318.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.30%)</title><rect x="1147.9" y="291.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1150.9" y="302.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.30%)</title><rect x="1147.9" y="275.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1150.9" y="286.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.30%)</title><rect x="1147.9" y="259.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.9" y="270.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.30%)</title><rect x="1147.9" y="243.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.9" y="254.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.30%)</title><rect x="1147.9" y="227.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1150.9" y="238.0"></text>
</g>
<g>
<title>[tid=43267] (11 samples, 3.27%)</title><rect x="1151.4" y="419.0" width="38.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1154.4" y="430.0">[ti..</text>
</g>
<g>
<title>thread_start (11 samples, 3.27%)</title><rect x="1151.4" y="403.0" width="38.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1154.4" y="414.0">thr..</text>
</g>
<g>
<title>_pthread_start (11 samples, 3.27%)</title><rect x="1151.4" y="387.0" width="38.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1154.4" y="398.0">_pt..</text>
</g>
<g>
<title>_pthread_body (11 samples, 3.27%)</title><rect x="1151.4" y="371.0" width="38.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1154.4" y="382.0">_pt..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 3.27%)</title><rect x="1151.4" y="355.0" width="38.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1154.4" y="366.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (11 samples, 3.27%)</title><rect x="1151.4" y="339.0" width="38.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.4" y="350.0">Thr..</text>
</g>
<g>
<title>JavaThread::run() (11 samples, 3.27%)</title><rect x="1151.4" y="323.0" width="38.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.4" y="334.0">Jav..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 3.27%)</title><rect x="1151.4" y="307.0" width="38.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.4" y="318.0">Jav..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 3.27%)</title><rect x="1151.4" y="291.0" width="38.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.4" y="302.0">Com..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 3.27%)</title><rect x="1151.4" y="275.0" width="38.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.4" y="286.0">Com..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 3.27%)</title><rect x="1151.4" y="259.0" width="38.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.4" y="270.0">C2C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (11 samples, 3.27%)</title><rect x="1151.4" y="243.0" width="38.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.4" y="254.0">Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 1.49%)</title><rect x="1151.4" y="227.0" width="17.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.4" y="238.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.30%)</title><rect x="1151.4" y="211.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.4" y="222.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.30%)</title><rect x="1151.4" y="195.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.4" y="206.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 1.19%)</title><rect x="1154.9" y="211.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.9" y="222.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.89%)</title><rect x="1154.9" y="195.0" width="10.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.9" y="206.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.30%)</title><rect x="1154.9" y="179.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.9" y="190.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.30%)</title><rect x="1158.4" y="179.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.4" y="190.0"></text>
</g>
<g>
<title>PhaseChaitin::raise_pressure(Block*, LRG&amp;, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.30%)</title><rect x="1158.4" y="163.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.4" y="174.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.30%)</title><rect x="1158.4" y="147.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.4" y="158.0"></text>
</g>
<g>
<title>RegMask::overlap(RegMask const&amp;) const (1 samples, 0.30%)</title><rect x="1158.4" y="131.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.4" y="142.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_interference_from_copy(Block*, unsigned int, unsigned int, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.30%)</title><rect x="1161.9" y="179.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1164.9" y="190.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.30%)</title><rect x="1165.4" y="195.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.4" y="206.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.30%)</title><rect x="1165.4" y="179.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.4" y="190.0"></text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 0.30%)</title><rect x="1165.4" y="163.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.4" y="174.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 1.19%)</title><rect x="1168.9" y="227.0" width="14.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.9" y="238.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.30%)</title><rect x="1168.9" y="211.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.9" y="222.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.30%)</title><rect x="1168.9" y="195.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.9" y="206.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) (1 samples, 0.30%)</title><rect x="1168.9" y="179.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.9" y="190.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_main_switch(Node*, Final_Reshape_Counts&amp;, unsigned int) (1 samples, 0.30%)</title><rect x="1168.9" y="163.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.9" y="174.0"></text>
</g>
<g>
<title>Node_Array::map(unsigned int, Node*) (1 samples, 0.30%)</title><rect x="1168.9" y="147.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.9" y="158.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.60%)</title><rect x="1172.4" y="211.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.4" y="222.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.30%)</title><rect x="1172.4" y="195.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.4" y="206.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post_work(Node*, bool) (1 samples, 0.30%)</title><rect x="1172.4" y="179.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.4" y="190.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.30%)</title><rect x="1172.4" y="163.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.4" y="174.0"></text>
</g>
<g>
<title>_platform_strcmp (1 samples, 0.30%)</title><rect x="1172.4" y="147.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1175.4" y="158.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.30%)</title><rect x="1176.0" y="195.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.0" y="206.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.30%)</title><rect x="1176.0" y="179.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.0" y="190.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.30%)</title><rect x="1176.0" y="163.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.0" y="174.0"></text>
</g>
<g>
<title>CmpPNode::sub(Type const*, Type const*) const (1 samples, 0.30%)</title><rect x="1176.0" y="147.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.0" y="158.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.30%)</title><rect x="1179.5" y="211.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.5" y="222.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.30%)</title><rect x="1179.5" y="195.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.5" y="206.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.30%)</title><rect x="1179.5" y="179.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.5" y="190.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.30%)</title><rect x="1179.5" y="163.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.5" y="174.0"></text>
</g>
<g>
<title>IfNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.30%)</title><rect x="1179.5" y="147.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.5" y="158.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.30%)</title><rect x="1179.5" y="131.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.5" y="142.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.60%)</title><rect x="1183.0" y="227.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.0" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.60%)</title><rect x="1183.0" y="211.0" width="7.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.60%)</title><rect x="1183.0" y="195.0" width="7.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.60%)</title><rect x="1183.0" y="179.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.0" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="1183.0" y="163.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.0" y="174.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="1183.0" y="147.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.0" y="158.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.30%)</title><rect x="1183.0" y="131.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.0" y="142.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.30%)</title><rect x="1183.0" y="115.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.0" y="126.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_native_hashcode(bool, bool) (1 samples, 0.30%)</title><rect x="1183.0" y="99.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.0" y="110.0"></text>
</g>
<g>
<title>LibraryCallKit::generate_method_call(vmIntrinsics::ID, bool, bool) (1 samples, 0.30%)</title><rect x="1183.0" y="83.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.0" y="94.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.30%)</title><rect x="1183.0" y="67.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.0" y="78.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.30%)</title><rect x="1183.0" y="51.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.0" y="62.0"></text>
</g>
<g>
<title>TypeTuple::fields(unsigned int) (1 samples, 0.30%)</title><rect x="1183.0" y="35.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.0" y="46.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.30%)</title><rect x="1186.5" y="163.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.5" y="174.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.30%)</title><rect x="1186.5" y="147.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.5" y="158.0"></text>
</g>
<g>
<title>Parse::path_is_suitable_for_uncommon_trap(float) const (1 samples, 0.30%)</title><rect x="1186.5" y="131.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.5" y="142.0"></text>
</g>
<g>
<title>Compile::too_many_traps(ciMethod*, int, Deoptimization::DeoptReason) (1 samples, 0.30%)</title><rect x="1186.5" y="115.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="126.0"></text>
</g>
<g>
<title>ciMethodData::has_trap_at(ProfileData*, int) (1 samples, 0.30%)</title><rect x="1186.5" y="99.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.5" y="110.0"></text>
</g>
<g>
<title>Deoptimization::reason_recorded_per_bytecode_if_any(Deoptimization::DeoptReason) (1 samples, 0.30%)</title><rect x="1186.5" y="83.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="94.0"></text>
</g>
</g>
</svg>
